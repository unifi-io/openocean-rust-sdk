use std::fmt;

// https://apis.openocean.finance/developer/apis/supported-chains


#[derive(Clone, Copy, Debug)]
pub enum Chain {
    Eth,
    Bsc,
    ZkSyncEra,
    Polygon,
    Base,
    Linea,
    Fantom,
    Avalanche,
    Arbitrum,
    Optimism,
    Moonriver,
    Aurora,
    Cronos,
    Harmony,
    Kava,
    MetisAndromeda,
    Celo,
    Telos,
    PolygonZkEVM,
    Gnosis,
    OpBNB,
    Mantle,
    Manta,
    Scroll,
    Blast,
    Mode,
    Rootstock,
    Sei,
    Gravity,
    Apechain,
    Sonic,
    Berachain,
    MonadTestnet,
    UniChain,
    Flare,
    Swell,
    HyperEVM,
    Plume,
    TAC,

    // no evm chains
    Solana,
    Ontology,
    Near,
    Starknet,
    // Sui,
}

impl fmt::Display for Chain {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let s = match self {
            Chain::Eth => "eth",
            Chain::Bsc => "bsc",
            Chain::ZkSyncEra => "zksync",
            Chain::Polygon => "polygon",
            Chain::Base => "base",
            Chain::Linea => "linea",
            Chain::Fantom => "fantom",
            Chain::Avalanche => "avax",
            Chain::Arbitrum => "arbitrum",
            Chain::Optimism => "optimism",
            Chain::Moonriver => "moonriver",
            Chain::Aurora => "aurora",
            Chain::Cronos => "cronos",
            Chain::Harmony => "harmony",
            Chain::Kava => "kava",
            Chain::MetisAndromeda => "metis",
            Chain::Celo => "celo",
            Chain::Telos => "telos",
            Chain::PolygonZkEVM => "polygon_zkevm",
            Chain::Gnosis => "gnosis",
            Chain::OpBNB => "opbnb",
            Chain::Mantle => "mantle",
            Chain::Manta => "manta",
            Chain::Scroll => "scroll",
            Chain::Blast => "blast",
            Chain::Mode => "mode",
            Chain::Rootstock => "rootstock",
            Chain::Sei => "sei",
            Chain::Gravity => "gravity",
            Chain::Apechain => "ape",
            Chain::Sonic => "sonic",
            Chain::Berachain => "bera",
            Chain::MonadTestnet => "monad",
            Chain::UniChain => "uni",
            Chain::Flare => "flare",
            Chain::Swell => "swell",
            Chain::HyperEVM => "hyperevm",
            Chain::Plume => "plume",
            Chain::TAC => "tac",
            // no evm chains
            Chain::Solana => "solana",
            Chain::Ontology => "ont",
            Chain::Near => "near",
            Chain::Starknet => "starknet",
            // Sui => "sui",
        };
        f.write_str(s)
    }
}
